<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <!-- permissions für audio recorder -->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MICROPHONE" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_MEDIA_PLAYBACK" />
    <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" /> <!-- damit der service auch laufen darf, wenn die app "geschlossen" -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission
        android:name="android.permission.READ_EXTERNAL_STORAGE"
        android:maxSdkVersion="32" /> <!-- TODO not sure about the max sdk version here, could lead to errors -->
    <!--
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"
            android:maxSdkVersion="32" />  das hier ist eher für die Zukunft, diese Permission, momentan will ich in die Extenral storage des Handys nix reinschreiben
    -->
    <uses-permission android:name="android.permission.READ_MEDIA_AUDIO" />
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />

    <!--HIER ICON ERSTELLNE-->

    <!-- //mongoDB : android:name=".MongoDBRealmConfig"-->
    <application
        android:name=".mongo.MongoDBRealmConfig"
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.remember2"
        tools:targetApi="31">
        <activity
            android:name=".Settings"
            android:exported="false"
            android:label="@string/settings"/>
        <activity
            android:name=".publish.Publish"
            android:exported="false"
            android:label="@string/shareyourmemories" />
        <activity
            android:name=".Login"
            android:launchMode="standard"
            android:exported="false"
            android:label="@string/loginCAPS" />
        <activity
            android:name=".Register"
            android:exported="false"
            android:label="@string/registerCAPS" />
        <activity
            android:name=".categories.CategoryManager"
            android:exported="false"
            android:label="@string/category" />
        <!-- android:windowSoftInputMode="adjustResize" -->
        <activity
            android:name=".Main"
            android:exported="true"
            android:label="@string/main">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <service
            android:name=".publish.RecordingService"
            android:foregroundServiceType="microphone"
            android:exported="false"/>
        <service
            android:name=".ui.memo.PlayingService"
            android:foregroundServiceType="mediaPlayback"
            android:exported="false">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
                <!--  <action android:name="android.media.browse.MediaBrowserService" /> -->
            </intent-filter>
        </service>
        <!--
        exported specifically controls whether other applications outside your app can interact with the service (phone ui excluded, it can always)
        -->

        <!--MEDIA_BUTTON events are typically those that appear on headsets or other external media controllers-->
        <receiver
            android:name="androidx.media.session.MediaButtonReceiver"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

        <!--TODO (manifest) (notific) ICH GLAUBE DER NotifBrotcastReceiver kannweg-->
         <receiver android:name=".publish.NotifBrotcastReceiver"
            android:exported="false">
             <intent-filter>
                 <action android:name="action_recordpause" />
                 <action android:name="android.intent.action.MEDIA_BUTTON" />
             </intent-filter>
        </receiver>
        <!--
                 <action android:name="action_heart" />
                 <action android:name="action_playpause" />
        -->
        <!--TODO (notifc broadcast receiver) 30.11. set here in manifest OR DYNAMICALLY EACH TIME IN CODE:
        YourBroadcastReceiver receiver = new YourBroadcastReceiver();
        IntentFilter filter = new IntentFilter("com.example.yourapp.ACTION_TOGGLE_HEART");
        registerReceiver(receiver, filter);
        -->


    <!--TODO (C) was sehe ch hier fuer 1 juvel ? :-->
        <meta-data
            android:name="android.app.notification.default_channel_id"
            android:value="@string/notification_channel_id" />
    </application>

</manifest>